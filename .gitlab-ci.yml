stages:
  - build
  - test

.base:
  image: "ruby:2.6.4"
  cache:
    key: gems_and_packages
    paths:
      - apt-cache/
      - vendor/ruby
      - node_modules/
    policy: pull  
  before_script:
    - gem install bundler --no_document
    - bundle install --jobs $(nproc) "${FLAGS[@]}" -- path=vendor

.base_db:
  extends: .base
  services:  
    - postgres:11.6

  variables:
    POSTGRES_USER: runner
    POSTGRES_PASSWORD: ""
    DB_USERNAME: runner
    DB_PASSWORD: ""
    DB_HOST: postgres 
    RAILS_ENV: test 
  before_script:
    - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR
    - apt-get update -qq && apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -yqq nodejs
    - ruby -v
    - which ruby 
    - gem install bundler --no-document
    - RAILS_ENV=test bundle install --jobs $(nproc) "${FLAGS[@]}" --path=vendor
    - cp config/database.yml.gitlab config/database.yml
    - RAILS_ENV=test bundle exec rake db:create db:schema:load db:seed --trace
    - RAILS_ENV=test bundle exec rails webpacker:compile

rspec:
  extends: .base_db 
  stage: test
  cache:
    policy: pull-push
  script:
    - RAILS_ENV=test bundle exec rspec --format progress  